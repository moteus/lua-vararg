language: erlang

env:
  global:
    - LUAROCKS_VER=2.0.13
    - LUAROCKS_BASE=luarocks-$LUAROCKS_VER
    - LUAROCKS_INSTALL=wget
    - LUAROCKS_GITTAG=master
    # - LUAROCKS_GITTAG=v$LUAROCKS_VER
  matrix:
    - VARARG=vararg     LUA=lua5.1 LUA_DEV=liblua5.1-dev LUA_VER=5.1 LUA_SFX=5.1 LUA_INCDIR=/usr/include/lua5.1
    - VARARG=vararg     LUA=lua5.2 LUA_DEV=liblua5.2-dev LUA_VER=5.2 LUA_SFX=5.2 LUA_INCDIR=/usr/include/lua5.2
    - VARARG=vararg     LUA=luajit LUA_DEV=libluajit-5.1-dev LUA_VER=5.1 LUA_SFX=jit LUA_INCDIR=/usr/include/luajit-2.0
    - VARARG=vararg-lua LUA=lua5.1 LUA_DEV=liblua5.1-dev LUA_VER=5.1 LUA_SFX=5.1 LUA_INCDIR=/usr/include/lua5.1
    - VARARG=vararg-lua LUA=lua5.2 LUA_DEV=liblua5.2-dev LUA_VER=5.2 LUA_SFX=5.2 LUA_INCDIR=/usr/include/lua5.2
    - VARARG=vararg-lua LUA=luajit LUA_DEV=libluajit-5.1-dev LUA_VER=5.1 LUA_SFX=jit LUA_INCDIR=/usr/include/luajit-2.0

branches:
  only:
    - master

before_install:
  - if [ $LUA = "luajit" ]; then
      sudo add-apt-repository ppa:mwild1/ppa -y && sudo apt-get update -y;
    fi
  - sudo apt-get install $LUA
  - sudo apt-get install $LUA_DEV
  - lua$LUA_SFX -v
  # Install a recent luarocks release
  - if [ $LUAROCKS_INSTALL = "git" ]; then
      git clone https://github.com/keplerproject/luarocks.git;
      cd luarocks;
      git checkout $LUAROCKS_GITTAG;
    else
      wget http://luarocks.org/releases/$LUAROCKS_BASE.tar.gz;
      tar zxvpf $LUAROCKS_BASE.tar.gz;
      cd $LUAROCKS_BASE;
    fi
  - ./configure
    --lua-version=$LUA_VER --lua-suffix=$LUA_SFX --with-lua-include="$LUA_INCDIR"
  - sudo make
  - sudo make install
  - cd $TRAVIS_BUILD_DIR
  - sudo pip install cpp-coveralls

install:
  - sudo luarocks install --only-server=http://luarocks.org/repositories/rocks-scm luacov scm
  - sudo luarocks install https://raw.githubusercontent.com/moteus/luacov-coveralls/master/rockspecs/luacov-coveralls-scm-0.rockspec
  - sudo luarocks make rockspecs/$VARARG-scm-0.rockspec CFLAGS="-O2 -fPIC -ftest-coverage -fprofile-arcs" LIBFLAG="-shared --coverage"

script:
  - cd test
  - lua$LUA_SFX -lluacov test.lua

after_success:
  - cd $TRAVIS_BUILD_DIR
  - if [ $VARARG = "vararg" ]; then
      coveralls;
    else
      cd test;
      luacov-coveralls;
      curl --form "json_file=@luacov.report.json;type=application/json" https://coveralls.io/api/v1/jobs;
    fi

notifications:
  email:
    on_success: change
    on_failure: always